# Generated by Django 4.1.3 on 2023-02-02 14:51

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(blank=True, max_length=255, null=True)),
                ('category_order', models.IntegerField(blank=True, null=True)),
                ('disabled', models.PositiveIntegerField(blank=True, null=True)),
                ('prod_count', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ContactUsLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receive_time', models.DateTimeField(auto_now_add=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('client_deliverypartner', models.CharField(default='SkipTheDishes', max_length=100, null=True)),
                ('client_name', models.CharField(max_length=100, null=True)),
                ('client_email', models.CharField(max_length=100, null=True)),
                ('client_message', models.TextField(max_length=100, null=True)),
            ],
            options={
                'db_table': 'contact_us_log',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Ipv4',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('ip_start', models.BigIntegerField(blank=True, null=True)),
                ('ip_end', models.BigIntegerField(blank=True, null=True)),
                ('country_short', models.TextField(blank=True, db_collation='latin1_swedish_ci', null=True)),
                ('country', models.TextField(blank=True, db_collation='latin1_swedish_ci', null=True)),
                ('province', models.TextField(blank=True, db_collation='latin1_swedish_ci', null=True)),
                ('city', models.TextField(blank=True, db_collation='latin1_swedish_ci', null=True)),
                ('gps_lat', models.FloatField(blank=True, null=True)),
                ('gps_lng', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ipv4',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandingPageClicks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landing_page_id', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ipaddress', models.PositiveIntegerField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'landing_page_clicks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandingPagePreviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landing_page_id', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=45, null=True)),
                ('referrer', models.TextField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ipaddress', models.PositiveIntegerField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'landing_page_previews',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandingPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('snack_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('product_name', models.TextField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('background_image', models.TextField(blank=True, null=True)),
                ('social_image', models.TextField(blank=True, null=True)),
                ('copy', models.TextField(blank=True, db_collation='utf8mb4_0900_ai_ci', null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('disabled', models.IntegerField(blank=True, null=True)),
                ('uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('added_on', models.DateTimeField(blank=True, null=True)),
                ('added_by', models.IntegerField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'landing_pages',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='LandingPageViews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landing_page_id', models.PositiveIntegerField(blank=True, null=True)),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('ref', models.CharField(blank=True, max_length=45, null=True)),
                ('referrer', models.TextField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ipaddress', models.PositiveIntegerField(blank=True, null=True)),
                ('datetime', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'landing_page_views',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MenuApproval',
            fields=[
                ('idmenu_approval_copy1', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.CharField(blank=True, max_length=45, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('menu_id', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('product_id', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'menu_approval',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Menus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('hst', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('pst', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('profit', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('margin', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('delivery_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
            ],
            options={
                'db_table': 'menus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='MenusHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('hst', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('pst', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'menus_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_co', models.CharField(blank=True, max_length=45, null=True)),
                ('delivery_order_id', models.CharField(blank=True, max_length=45, null=True)),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
                ('order_date', models.DateTimeField(blank=True, null=True)),
                ('line_item', models.CharField(blank=True, max_length=50, null=True)),
                ('item_name', models.CharField(blank=True, max_length=255, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('modifier', models.CharField(blank=True, max_length=255, null=True)),
                ('modifier_id', models.IntegerField(blank=True, null=True)),
                ('quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('hst', models.IntegerField(blank=True, null=True)),
                ('pst', models.IntegerField(blank=True, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('imported_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerApplications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('ipaddress', models.CharField(blank=True, max_length=15, null=True)),
                ('received', models.DateTimeField(blank=True, null=True)),
                ('responded', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_applications',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerProducts',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('partner_registration_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.CharField(blank=True, max_length=45, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('price2', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'partner_products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerProductsHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('partner_registration_id', models.IntegerField(blank=True, null=True)),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_products_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerProductsModifiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('modifier_id', models.IntegerField()),
                ('partner_registration_id', models.IntegerField()),
            ],
            options={
                'db_table': 'partner_products_modifiers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerRegistrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('province', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('registered_on', models.DateTimeField(blank=True, null=True)),
                ('ipaddress', models.CharField(blank=True, max_length=15, null=True)),
                ('reviewed_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invite_code', models.CharField(blank=True, max_length=36, null=True)),
                ('invited_on', models.DateTimeField(blank=True, null=True)),
                ('application_id', models.IntegerField(blank=True, null=True)),
                ('hours', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('transit_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('beneficiary_address', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stock_submitted_on', models.DateTimeField(blank=True, null=True)),
                ('stock_comments', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_registrations',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='PartnerRegistrationsHistory',
            fields=[
                ('id_history', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('email', models.TextField(blank=True, null=True)),
                ('phone', models.TextField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('address2', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('province', models.TextField(blank=True, null=True)),
                ('postal_code', models.TextField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('registered_on', models.DateTimeField(blank=True, null=True)),
                ('ipaddress', models.CharField(blank=True, max_length=15, null=True)),
                ('reviewed_on', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('invite_code', models.CharField(blank=True, max_length=36, null=True)),
                ('invited_on', models.DateTimeField(blank=True, null=True)),
                ('application_id', models.IntegerField(blank=True, null=True)),
                ('hours', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('transit_number', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_account_holder', models.CharField(blank=True, max_length=255, null=True)),
                ('beneficiary_address', models.CharField(blank=True, max_length=255, null=True)),
                ('tax_id', models.CharField(blank=True, max_length=255, null=True)),
                ('stock_submitted_on', models.DateTimeField(blank=True, null=True)),
                ('stock_comments', models.TextField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'partner_registrations_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductApproval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, max_length=45, null=True)),
                ('product', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_id', models.IntegerField()),
                ('status', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'product_approval',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=45, null=True)),
                ('units', models.CharField(blank=True, max_length=45, null=True)),
                ('suggested_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('suggested_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('disabled', models.PositiveIntegerField(blank=True, null=True)),
                ('is_vegan', models.PositiveIntegerField(blank=True, null=True)),
                ('is_vegetarian', models.PositiveIntegerField(blank=True, null=True)),
                ('is_gluten_free', models.PositiveIntegerField(blank=True, null=True)),
                ('upc', models.CharField(blank=True, max_length=20, null=True)),
                ('modifier_id', models.IntegerField(blank=True, null=True)),
                ('added_by', models.IntegerField(blank=True, null=True)),
                ('added_on', models.DateTimeField(blank=True, null=True)),
                ('updated', models.DateTimeField(blank=True, null=True)),
                ('temperature', models.TextField(blank=True, null=True)),
                ('product_type_1', models.CharField(blank=True, max_length=45, null=True)),
                ('product_type_2', models.CharField(blank=True, max_length=45, null=True)),
                ('product_type_3', models.CharField(blank=True, max_length=45, null=True)),
                ('tax_category', models.CharField(blank=True, max_length=45, null=True)),
                ('tax_category_2', models.CharField(blank=True, max_length=45, null=True)),
                ('tax_category_skip', models.CharField(blank=True, max_length=45, null=True)),
                ('is_peanut_free', models.PositiveIntegerField(blank=True, null=True)),
                ('core_product', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductsCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('category_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products_categories',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductsHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField()),
                ('name', models.TextField(blank=True, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.TextField(blank=True, null=True)),
                ('size', models.CharField(blank=True, max_length=45, null=True)),
                ('units', models.CharField(blank=True, max_length=45, null=True)),
                ('suggested_price', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('suggested_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('image', models.TextField(blank=True, null=True)),
                ('category', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('disabled', models.PositiveIntegerField(blank=True, null=True)),
                ('is_vegan', models.PositiveIntegerField(blank=True, null=True)),
                ('is_vegetarian', models.PositiveIntegerField(blank=True, null=True)),
                ('is_gluten_free', models.PositiveIntegerField(blank=True, null=True)),
                ('upc', models.CharField(blank=True, max_length=20, null=True)),
                ('modifier_id', models.IntegerField(blank=True, null=True)),
                ('date_time', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.CharField(blank=True, max_length=255, null=True)),
                ('is_peanut_free', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductsIdentifiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=255, null=True, unique=True)),
            ],
            options={
                'db_table': 'products_identifiers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ProductsModifiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.IntegerField(blank=True, null=True)),
                ('modifier', models.TextField(blank=True, null=True)),
                ('modifier_group_name', models.CharField(blank=True, max_length=45, null=True)),
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('disabled', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'products_modifiers',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='SpeedysnacksSpeedysnacks',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'speedysnacks_speedysnacks',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Stores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('province', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('gps_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('gps_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('gmt', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('joined', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('registration_id', models.IntegerField(blank=True, null=True)),
                ('application_id', models.IntegerField(blank=True, null=True)),
                ('open_monday', models.TextField(blank=True, null=True)),
                ('close_monday', models.TextField(blank=True, null=True)),
                ('open_tuesday', models.TextField(blank=True, null=True)),
                ('close_tuesday', models.TextField(blank=True, null=True)),
                ('open_wednesday', models.TextField(blank=True, null=True)),
                ('close_wednesday', models.TextField(blank=True, null=True)),
                ('open_thursday', models.TextField(blank=True, null=True)),
                ('close_thursday', models.TextField(blank=True, null=True)),
                ('open_friday', models.TextField(blank=True, null=True)),
                ('close_friday', models.TextField(blank=True, null=True)),
                ('open_saturday', models.TextField(blank=True, null=True)),
                ('close_saturday', models.TextField(blank=True, null=True)),
                ('open_sunday', models.TextField(blank=True, null=True)),
                ('close_sunday', models.TextField(blank=True, null=True)),
                ('delivery_company_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('delivery_company', models.TextField(blank=True, null=True)),
                ('uber_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('uber_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('uber_store_url', models.TextField(blank=True, null=True)),
                ('doordash_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('doordash_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('doordash_store_url', models.TextField(blank=True, null=True)),
                ('skip_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('skip_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('skip_store_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stores',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoresHistory',
            fields=[
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.PositiveIntegerField(blank=True, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_name', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('address2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(blank=True, max_length=200, null=True)),
                ('province', models.CharField(blank=True, max_length=10, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('phone', models.CharField(blank=True, max_length=45, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('gps_lat', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('gps_lng', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('joined', models.DateTimeField(blank=True, null=True)),
                ('status', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('registration_id', models.IntegerField(blank=True, null=True)),
                ('application_id', models.IntegerField(blank=True, null=True)),
                ('open_monday', models.TextField(blank=True, null=True)),
                ('close_monday', models.TextField(blank=True, null=True)),
                ('open_tuesday', models.TextField(blank=True, null=True)),
                ('close_tuesday', models.TextField(blank=True, null=True)),
                ('open_wednesday', models.TextField(blank=True, null=True)),
                ('close_wednesday', models.TextField(blank=True, null=True)),
                ('open_thursday', models.TextField(blank=True, null=True)),
                ('close_thursday', models.TextField(blank=True, null=True)),
                ('open_friday', models.TextField(blank=True, null=True)),
                ('close_friday', models.TextField(blank=True, null=True)),
                ('open_saturday', models.TextField(blank=True, null=True)),
                ('close_saturday', models.TextField(blank=True, null=True)),
                ('open_sunday', models.TextField(blank=True, null=True)),
                ('close_sunday', models.TextField(blank=True, null=True)),
                ('uber_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('uber_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('uber_store_url', models.TextField(blank=True, null=True)),
                ('doordash_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('doordash_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('doordash_store_url', models.TextField(blank=True, null=True)),
                ('skip_store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('skip_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('skip_store_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'stores_history',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='StoresReports',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('file_name', models.CharField(blank=True, max_length=255, null=True)),
                ('sent_on', models.DateTimeField(blank=True, null=True)),
                ('sent_by', models.IntegerField(blank=True, null=True)),
                ('paid_on', models.DateTimeField(blank=True, null=True)),
                ('paid_by', models.IntegerField(blank=True, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
            ],
            options={
                'db_table': 'stores_reports',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=45, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('admin', models.IntegerField(blank=True, null=True)),
                ('marketing', models.IntegerField(blank=True, null=True)),
                ('stores', models.IntegerField(blank=True, null=True)),
                ('pricing', models.IntegerField(blank=True, null=True)),
                ('products', models.IntegerField(blank=True, null=True)),
                ('registrations', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VisitorsStores',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipaddress', models.IntegerField(blank=True, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'visitors_stores',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Visits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.TextField(blank=True, null=True)),
                ('ipaddress', models.PositiveIntegerField(blank=True, null=True)),
                ('ipaddress_ipv4', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.TextField(blank=True, null=True)),
                ('visited_on', models.DateTimeField(blank=True, null=True)),
                ('creative_uuid', models.CharField(blank=True, max_length=36, null=True)),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
            ],
            options={
                'db_table': 'visits',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='VisitsAdmin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page', models.TextField(blank=True, null=True)),
                ('ipaddress', models.PositiveIntegerField(blank=True, null=True)),
                ('ipaddress_ipv4', models.CharField(blank=True, max_length=45, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('referrer', models.TextField(blank=True, null=True)),
                ('visited_on', models.DateTimeField(blank=True, null=True)),
                ('webpage', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'visits_admin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='ModifiersIdentifiers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_id', models.PositiveIntegerField(blank=True, null=True)),
                ('modifier_id', models.PositiveIntegerField(blank=True, null=True)),
                ('identifier', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'modifiers_identifiers',
                'managed': True,
                'unique_together': {('product_id', 'modifier_id', 'identifier')},
            },
        ),
        migrations.CreateModel(
            name='FullfillmentPartner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_id', models.CharField(blank=True, max_length=36, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'fullfillment_partners',
                'managed': True,
            },
        ),
    ]
